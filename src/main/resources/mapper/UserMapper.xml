<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lx.povertyalleviation.dao.UserDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.lx.povertyalleviation.pojo.User">
        <id column="id" property="id"/>
        <result column="userName" property="userName"/>
        <result column="nickName" property="nickName"/>
        <result column="account" property="account"/>
        <result column="password" property="password"/>
        <result column="gender" property="gender"/>
        <result column="age" property="age"/>
        <result column="email" property="email"/>
        <result column="address" property="address"/>
        <result column="roleId" property="roleId"/>
        <association property="roles" select="com.lx.povertyalleviation.dao.RoleDao.findRoleByRoleId" column="roleId">
        </association>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, userName, nickName, account, password, gender, age, email,address,roleId
    </sql>

    <!--分页查询所有用户信息-->
    <select id="findAllUserByPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include> from user limit #{start},#{limit}
    </select>

    <!--查询用户总数-->
    <select id="selectCount" resultType="java.lang.Integer">
        select count(*)
        from user;
    </select>

    <!--根据搜索条件查询用户-->
    <select id="search" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from user
        <where>
            <if test="userid!=null">
                and id like '%${userid}%'
            </if>
            <if test="username!=''">
                and userName like '%${username}%'
            </if>
            <if test="account!=''">
                and account like '%${account}%'
            </if>
        </where>
        limit #{start},#{limit}

    </select>
    <!--根据搜索条件查询用户数量-->
    <select id="searchCountLike" resultType="java.lang.Integer">
        select count(*) from user
        <where>
            <if test="userid!=null">
                and id like '%${userid}%'
            </if>
            <if test="username!=''">
                and userName like '%${username}%'
            </if>
            <if test="account!=''">
                and account like '%${account}%'
            </if>
        </where>
    </select>
    <!--添加用户-->
    <insert id="addUser" parameterType="com.lx.povertyalleviation.pojo.User">
        insert into user(userName, nickName, account, password, gender, age, email,address,roleId)
        values (#{userName}, #{nickName}, #{account}, #{password}, #{gender}, #{age}, #{email},#{address},#{roleId})
    </insert>

    <!--根据用户id进行批量删除-->
    <delete id="batchDeleteByUserId">
        delete from user where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <!--根据用户id进行删除-->
    <delete id="deleteById">
        delete
        from user
        where id = #{id}
    </delete>
    <!--根据用户Id查询该用户信息-->
    <select id="findUserById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include> from user where id=#{id}
    </select>
    <!--更新用户信息-->
    <update id="updateUser" parameterType="com.lx.povertyalleviation.pojo.User">
        update user
        <trim prefix="set" suffixOverrides=",">
            <if test="userName!=null">
                userName=#{userName},
            </if>
            <if test="nickName!=null">
                nickName=#{nickName},
            </if>
            <if test="account!=null">
                account=#{account},
            </if>
            <if test="password!=null">
                password=#{password},
            </if>
            <if test="gender!=null">
                gender=#{gender},
            </if>
            <if test="age!=null">
                age=#{age},
            </if>
            <if test="email!=null">
                email=#{email},
            </if>
            <if test="address!=null">
                address=#{address},
            </if>
            <if test="roleId!=null">
                roleId=#{roleId},
            </if>
        </trim>
        where id = #{id}
    </update>
    <!--根据账户名查询用户-->
    <select id="findUserByName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from user where account=#{account}
    </select>

<!--    将邮箱验证码添加进数据库-->
    <insert id="addValidateCode">
        insert into validatecode(code, account, creatTime) values (#{code},#{account},#{date})
    </insert>

<!--    根据账户查询验证码-->
    <select id="findValidateCode" resultType="string">
        select `code` from validatecode where account=#{account}
    </select>

<!--    更新密码-->
    <update id="updateUserPwd" >
        update user set password=#{pwd} where account=#{account}
    </update>

<!--    删除验证码-->
    <delete id="deleteValidate">
        delete  from  validatecode where account=#{account}
    </delete>
</mapper>
